<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="GoDaddyMigratorDataSet" targetNamespace="http://tempuri.org/GoDaddyMigratorDataSet.xsd" xmlns:mstns="http://tempuri.org/GoDaddyMigratorDataSet.xsd" xmlns="http://tempuri.org/GoDaddyMigratorDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="GodaddyMigratorConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="GodaddyMigratorConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.EmailMigratorLib.Properties.Settings.GlobalReference.Default.GodaddyMigratorConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AccountsTableAdapter" GeneratorDataComponentClassName="AccountsTableAdapter" Name="Accounts" UserDataComponentName="AccountsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GodaddyMigratorConnectionString (Settings)" DbObjectName="GoDaddyMigrator.dbo.Accounts" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Accounts] WHERE (([accountid] = @Original_accountid))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_accountid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="accountid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Accounts] ([username], [domain], [password]) VALUES (@username, @domain, @password);
SELECT accountid, username, domain, password FROM Accounts WHERE (accountid = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@domain" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="domain" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT accountid, username, domain, password FROM dbo.Accounts</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Accounts] SET [username] = @username, [domain] = @domain, [password] = @password WHERE (([accountid] = @Original_accountid));
SELECT accountid, username, domain, password FROM Accounts WHERE (accountid = @accountid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@domain" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="domain" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_accountid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="accountid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="accountid" ColumnName="accountid" DataSourceName="GoDaddyMigrator.dbo.Accounts" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@accountid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="accountid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="accountid" DataSetColumn="accountid" />
              <Mapping SourceColumn="username" DataSetColumn="username" />
              <Mapping SourceColumn="domain" DataSetColumn="domain" />
              <Mapping SourceColumn="password" DataSetColumn="password" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="GodaddyMigratorConnectionString (Settings)" DbObjectName="GoDaddyMigrator.dbo.Accounts" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByAccountID" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountID" GeneratorSourceName="FillByAccountID" GetMethodModifier="Public" GetMethodName="GetDataByAccountID" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByAccountID" UserSourceName="FillByAccountID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT accountid, domain, password, username FROM Accounts WHERE (accountid = @accountid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="accountid" ColumnName="accountid" DataSourceName="GoDaddyMigrator.dbo.Accounts" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@accountid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="accountid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="GodaddyMigratorConnectionString (Settings)" DbObjectName="GoDaddyMigrator.dbo.Accounts" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByLoginInfo" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByLoginInfo" GeneratorSourceName="FillByLoginInfo" GetMethodModifier="Public" GetMethodName="GetDataByLoginInfo" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByLoginInfo" UserSourceName="FillByLoginInfo">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT accountid, domain, password, username FROM Accounts WHERE (username = @username) AND (domain = @domain)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="username" ColumnName="username" DataSourceName="GoDaddyMigrator.dbo.Accounts" DataTypeServer="nvarchar(100)" DbType="String" Direction="Input" ParameterName="@username" Precision="0" ProviderType="NVarChar" Scale="0" Size="100" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="domain" ColumnName="domain" DataSourceName="GoDaddyMigrator.dbo.Accounts" DataTypeServer="nvarchar(100)" DbType="String" Direction="Input" ParameterName="@domain" Precision="0" ProviderType="NVarChar" Scale="0" Size="100" SourceColumn="domain" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="FoldersTableAdapter" GeneratorDataComponentClassName="FoldersTableAdapter" Name="Folders" UserDataComponentName="FoldersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GodaddyMigratorConnectionString (Settings)" DbObjectName="GoDaddyMigrator.dbo.Folders" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Folders] WHERE (([folderid] = @Original_folderid))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_folderid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="folderid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Folders] ([accountid], [name]) VALUES (@accountid, @name);
SELECT accountid, folderid, name FROM Folders WHERE (folderid = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@accountid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="accountid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT accountid, folderid, name FROM dbo.Folders</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Folders] SET [accountid] = @accountid, [name] = @name WHERE (([folderid] = @Original_folderid));
SELECT accountid, folderid, name FROM Folders WHERE (folderid = @folderid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@accountid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="accountid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_folderid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="folderid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="folderid" ColumnName="folderid" DataSourceName="GoDaddyMigrator.dbo.Folders" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@folderid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="folderid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="accountid" DataSetColumn="accountid" />
              <Mapping SourceColumn="folderid" DataSetColumn="folderid" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="GodaddyMigratorConnectionString (Settings)" DbObjectName="GoDaddyMigrator.dbo.Folders" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByAccountID" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAccountID" GeneratorSourceName="FillByAccountID" GetMethodModifier="Public" GetMethodName="GetDataByAccountID" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByAccountID" UserSourceName="FillByAccountID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        accountid, folderid, name
FROM            Folders
WHERE        (accountid = @accountid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="accountid" ColumnName="accountid" DataSourceName="GoDaddyMigrator.dbo.Folders" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@accountid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="accountid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MessagesTableAdapter" GeneratorDataComponentClassName="MessagesTableAdapter" Name="Messages" UserDataComponentName="MessagesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GodaddyMigratorConnectionString (Settings)" DbObjectName="GoDaddyMigrator.dbo.Messages" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Messages] WHERE (([folderid] = @Original_folderid) AND ([uid] = @Original_uid))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_folderid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="folderid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_uid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="uid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Messages] ([folderid], [uid]) VALUES (@folderid, @uid);
SELECT folderid, uid FROM Messages WHERE (folderid = @folderid) AND (uid = @uid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@folderid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="folderid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@uid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="uid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT folderid, uid FROM dbo.Messages</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Messages] SET [folderid] = @folderid, [uid] = @uid WHERE (([folderid] = @Original_folderid) AND ([uid] = @Original_uid));
SELECT folderid, uid FROM Messages WHERE (folderid = @folderid) AND (uid = @uid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@folderid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="folderid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@uid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="uid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_folderid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="folderid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_uid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="uid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="folderid" DataSetColumn="folderid" />
              <Mapping SourceColumn="uid" DataSetColumn="uid" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="GodaddyMigratorConnectionString (Settings)" DbObjectName="GoDaddyMigrator.dbo.Messages" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByFolderID" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByFolderID" GeneratorSourceName="FillByFolderID" GetMethodModifier="Public" GetMethodName="GetDataByFolderID" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByFolderID" UserSourceName="FillByFolderID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        folderid, uid
FROM            Messages
WHERE        (folderid = @folderid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="folderid" ColumnName="folderid" DataSourceName="GoDaddyMigrator.dbo.Messages" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@folderid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="folderid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="QueueTableAdapter" GeneratorDataComponentClassName="QueueTableAdapter" Name="Queue" UserDataComponentName="QueueTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GodaddyMigratorConnectionString (Settings)" DbObjectName="GoDaddyMigrator.dbo.Queue" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Queue] WHERE (([queueid] = @Original_queueid))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_queueid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="queueid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Queue] ([accountid], [queued]) VALUES (@accountid, @queued);
SELECT queueid, accountid, queued FROM Queue WHERE (queueid = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@accountid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="accountid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@queued" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="queued" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT queueid, accountid, queued FROM dbo.Queue</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Queue] SET [accountid] = @accountid, [queued] = @queued WHERE (([queueid] = @Original_queueid));
SELECT queueid, accountid, queued FROM Queue WHERE (queueid = @queueid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@accountid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="accountid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@queued" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="queued" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_queueid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="queueid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="queueid" ColumnName="queueid" DataSourceName="GoDaddyMigrator.dbo.Queue" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@queueid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="queueid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="queueid" DataSetColumn="queueid" />
              <Mapping SourceColumn="accountid" DataSetColumn="accountid" />
              <Mapping SourceColumn="queued" DataSetColumn="queued" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="GodaddyMigratorConnectionString (Settings)" DbObjectName="GoDaddyMigrator.dbo.Queue" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByQueued" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByQueued" GeneratorSourceName="FillByQueued" GetMethodModifier="Public" GetMethodName="GetDataByQueued" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByQueued" UserSourceName="FillByQueued">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT accountid, queued, queueid FROM Queue WHERE (queued = 1)</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="GodaddyMigratorConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy" GeneratorSourceName="OwnQueueItem" Modifier="Public" Name="OwnQueueItem" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="OwnQueueItem">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE       Queue
SET                queued = 0
WHERE        (queueid = @Original_queueid) AND (queued = 1);   </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_queueid" ColumnName="queueid" DataSourceName="GoDaddyMigrator.dbo.Queue" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_queueid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="queueid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="GoDaddyMigratorDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="GoDaddyMigratorDataSet" msprop:Generator_DataSetName="GoDaddyMigratorDataSet" msprop:EnableTableAdapterManager="true">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Accounts" msprop:Generator_UserTableName="Accounts" msprop:Generator_RowDeletedName="AccountsRowDeleted" msprop:Generator_RowChangedName="AccountsRowChanged" msprop:Generator_RowClassName="AccountsRow" msprop:Generator_RowChangingName="AccountsRowChanging" msprop:Generator_RowEvArgName="AccountsRowChangeEvent" msprop:Generator_RowEvHandlerName="AccountsRowChangeEventHandler" msprop:Generator_TableClassName="AccountsDataTable" msprop:Generator_TableVarName="tableAccounts" msprop:Generator_RowDeletingName="AccountsRowDeleting" msprop:Generator_TablePropName="Accounts">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="accountid" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="accountid" msprop:Generator_ColumnPropNameInRow="accountid" msprop:Generator_ColumnVarNameInTable="columnaccountid" msprop:Generator_ColumnPropNameInTable="accountidColumn" type="xs:int" />
              <xs:element name="username" msprop:Generator_UserColumnName="username" msprop:Generator_ColumnPropNameInRow="username" msprop:Generator_ColumnVarNameInTable="columnusername" msprop:Generator_ColumnPropNameInTable="usernameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="domain" msprop:Generator_UserColumnName="domain" msprop:Generator_ColumnPropNameInRow="domain" msprop:Generator_ColumnVarNameInTable="columndomain" msprop:Generator_ColumnPropNameInTable="domainColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="password" msprop:Generator_UserColumnName="password" msprop:Generator_ColumnPropNameInRow="password" msprop:Generator_ColumnVarNameInTable="columnpassword" msprop:Generator_ColumnPropNameInTable="passwordColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Folders" msprop:Generator_UserTableName="Folders" msprop:Generator_RowDeletedName="FoldersRowDeleted" msprop:Generator_RowChangedName="FoldersRowChanged" msprop:Generator_RowClassName="FoldersRow" msprop:Generator_RowChangingName="FoldersRowChanging" msprop:Generator_RowEvArgName="FoldersRowChangeEvent" msprop:Generator_RowEvHandlerName="FoldersRowChangeEventHandler" msprop:Generator_TableClassName="FoldersDataTable" msprop:Generator_TableVarName="tableFolders" msprop:Generator_RowDeletingName="FoldersRowDeleting" msprop:Generator_TablePropName="Folders">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="accountid" msprop:Generator_UserColumnName="accountid" msprop:Generator_ColumnPropNameInRow="accountid" msprop:Generator_ColumnVarNameInTable="columnaccountid" msprop:Generator_ColumnPropNameInTable="accountidColumn" type="xs:int" />
              <xs:element name="folderid" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="folderid" msprop:Generator_ColumnPropNameInRow="folderid" msprop:Generator_ColumnVarNameInTable="columnfolderid" msprop:Generator_ColumnPropNameInTable="folderidColumn" type="xs:int" />
              <xs:element name="name" msprop:Generator_UserColumnName="name" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInTable="nameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Messages" msprop:Generator_UserTableName="Messages" msprop:Generator_RowDeletedName="MessagesRowDeleted" msprop:Generator_RowChangedName="MessagesRowChanged" msprop:Generator_RowClassName="MessagesRow" msprop:Generator_RowChangingName="MessagesRowChanging" msprop:Generator_RowEvArgName="MessagesRowChangeEvent" msprop:Generator_RowEvHandlerName="MessagesRowChangeEventHandler" msprop:Generator_TableClassName="MessagesDataTable" msprop:Generator_TableVarName="tableMessages" msprop:Generator_RowDeletingName="MessagesRowDeleting" msprop:Generator_TablePropName="Messages">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="folderid" msprop:Generator_UserColumnName="folderid" msprop:Generator_ColumnPropNameInRow="folderid" msprop:Generator_ColumnVarNameInTable="columnfolderid" msprop:Generator_ColumnPropNameInTable="folderidColumn" type="xs:int" />
              <xs:element name="uid" msprop:Generator_UserColumnName="uid" msprop:Generator_ColumnPropNameInRow="uid" msprop:Generator_ColumnVarNameInTable="columnuid" msprop:Generator_ColumnPropNameInTable="uidColumn" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Queue" msprop:Generator_UserTableName="Queue" msprop:Generator_RowDeletedName="QueueRowDeleted" msprop:Generator_RowChangedName="QueueRowChanged" msprop:Generator_RowClassName="QueueRow" msprop:Generator_RowChangingName="QueueRowChanging" msprop:Generator_RowEvArgName="QueueRowChangeEvent" msprop:Generator_RowEvHandlerName="QueueRowChangeEventHandler" msprop:Generator_TableClassName="QueueDataTable" msprop:Generator_TableVarName="tableQueue" msprop:Generator_RowDeletingName="QueueRowDeleting" msprop:Generator_TablePropName="Queue">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="queueid" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="queueid" msprop:Generator_ColumnPropNameInRow="queueid" msprop:Generator_ColumnVarNameInTable="columnqueueid" msprop:Generator_ColumnPropNameInTable="queueidColumn" type="xs:int" />
              <xs:element name="accountid" msprop:Generator_UserColumnName="accountid" msprop:Generator_ColumnPropNameInRow="accountid" msprop:Generator_ColumnVarNameInTable="columnaccountid" msprop:Generator_ColumnPropNameInTable="accountidColumn" type="xs:int" />
              <xs:element name="queued" msprop:Generator_UserColumnName="queued" msprop:Generator_ColumnPropNameInRow="queued" msprop:Generator_ColumnVarNameInTable="columnqueued" msprop:Generator_ColumnPropNameInTable="queuedColumn" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Accounts" />
      <xs:field xpath="mstns:accountid" />
    </xs:unique>
    <xs:unique name="Folders_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Folders" />
      <xs:field xpath="mstns:folderid" />
    </xs:unique>
    <xs:unique name="Messages_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Messages" />
      <xs:field xpath="mstns:folderid" />
      <xs:field xpath="mstns:uid" />
    </xs:unique>
    <xs:unique name="Queue_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Queue" />
      <xs:field xpath="mstns:queueid" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Folders_Accounts" msdata:parent="Accounts" msdata:child="Folders" msdata:parentkey="accountid" msdata:childkey="accountid" msprop:Generator_UserRelationName="FK_Folders_Accounts" msprop:Generator_RelationVarName="relationFK_Folders_Accounts" msprop:Generator_UserChildTable="Folders" msprop:Generator_UserParentTable="Accounts" msprop:Generator_ParentPropName="AccountsRow" msprop:Generator_ChildPropName="GetFoldersRows" />
      <msdata:Relationship name="FK_Messages_Folders" msdata:parent="Folders" msdata:child="Messages" msdata:parentkey="folderid" msdata:childkey="folderid" msprop:Generator_UserRelationName="FK_Messages_Folders" msprop:Generator_RelationVarName="relationFK_Messages_Folders" msprop:Generator_UserChildTable="Messages" msprop:Generator_UserParentTable="Folders" msprop:Generator_ParentPropName="FoldersRow" msprop:Generator_ChildPropName="GetMessagesRows" />
      <msdata:Relationship name="FK_Queue_Accounts" msdata:parent="Accounts" msdata:child="Queue" msdata:parentkey="accountid" msdata:childkey="accountid" msprop:Generator_UserRelationName="FK_Queue_Accounts" msprop:Generator_RelationVarName="relationFK_Queue_Accounts" msprop:Generator_UserChildTable="Queue" msprop:Generator_UserParentTable="Accounts" msprop:Generator_ParentPropName="AccountsRow" msprop:Generator_ChildPropName="GetQueueRows" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>